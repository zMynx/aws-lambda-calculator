# .github/workflows/ci.yaml
---
name: CI
on:
  workflow_dispatch:
  pull_request:
    branches: [main]

jobs:
  code-checks:
    name: Code Standard Checks
    runs-on: ubuntu-latest
    permissions:
      contents: write
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"

      - name: Setup Python
        uses: actions/setup-python@v5.4.0
        with:
          python-version-file: pyproject.toml
          cache: poetry

      - name: Setup poetry
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          poetry --version
          python --version
          python -m pip install --upgrade pip

      - name: Install dependencies
        run: poetry install

      - name: Lint (ruff)
        run: |
          poetry run ruff format --check
          poetry run ruff check

      - name: Format (black)
        run: poetry run black --check .

      - name: Types checking (mypy)
        run: poetry run mypy --check-untyped-defs .

      - name: Notify failure if checks failed
        if: ${{ failure() }}
        env:
          msg: Some of the code standard checks have failed. Please run `just checks` locally before pushing your changes.
        run: |
          echo "::error::${msg}"

  # ✅ Test Stage (pytest)
  test:
    needs: [code-checks]
    name: Run Tests (pytest)
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5.4.0
        with:
          python-version-file: pyproject.toml
          cache: poetry

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"

      - name: Setup poetry and dependencies
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          poetry --version
          python -m pip install --upgrade pip
          poetry install

      - name: Run Pytest
        run: poetry run pytest

  # ✅ Super-Linter for YAML + Python syntax validation
  super-linter:
    needs: [code-checks]
    name: Lint YAML + Code with Super-Linter
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Super-Linter
        uses: github/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_PYTHON: true
          VALIDATE_YAML: true
          LINTER_RULES_PATH: .github/linters/
          DEFAULT_BRANCH: main

      - name: Check GitHub Actions YAML with actionlint
        uses: reviewdog/action-actionlint@v1
